
upstream backend {
	server ${BACKEND_UP_01} max_fails=3 fail_timeout=10s;
	server ${BACKEND_UP_02} max_fails=3 fail_timeout=10s;
}

map $cookie_backend $sticky_backend {
	backend1 ${BACKEND_UP_01};
    backend2 ${BACKEND_UP_02};
	default backend;
}

server {
    listen 80;

	proxy_redirect     off;
	proxy_set_header   Host $host;
	proxy_set_header   X-Real-IP $remote_addr;
	proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header   X-Forwarded-Proto http;
	proxy_set_header   X-Forwarded-Host $server_name;
	proxy_set_header   X-Forwarded-Port $server_port;
	proxy_connect_timeout 5;
	
	#add_header	Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
	#add_header X-Frame-Options "SAMEORIGIN";
	#add_header X-Content-Type-Options nosniff;

	error_log /var/log/nginx/error.log debug;

    location / {
		# Docker DNS resolver
		resolver 127.0.0.11 ipv6=off; #IMPORTANT!!!

		set $target http://${sticky_backend};

		proxy_pass         $target;

		# 504 Gateway Time-out
		error_page 504 = @backend_down;
	}

	location @backend_down {
		proxy_pass http://backend;
	}
}